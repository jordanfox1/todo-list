name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install pnpm
        run: npm i pnpm@latest -g

      - name: Install dependencies and build
        run: |
          pnpm i
          pnpm run build

      - name: Run Unit Tests
        run: pnpm run coverage

      # - name: Run Visual Regression Tests
      #   run: |
      #     pnpm add -g @testim/testim-cli --force
      #     testim --token ${{ secrets.TESTIM_TOKEN }} --project ${{ secrets.TESTIM_PROJECT_ID }} --grid "Testim-Grid"

      - name: Create staging .env file
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY_STAGING }}" > .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_STAGING }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN_STAGING }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID_STAGING }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID_STAGING }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET_STAGING }}" >> .env
          echo "VITE_NODE_ENV=${{ secrets.NODE_ENV_STAGING }}" >> .env
          cat .env

      - name: Deploy to Firebase Hosting (Staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_LIST_STAGING }}"
          channelId: live
          projectId: todo-list-staging
          publicDir: "./build"
          env: ".env"

      - name: Overwrite .env with production values
        run: |
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" > .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          cat .env

      - name: Deploy to Firebase Hosting (Production)
        if: github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_LIST_82592 }}"
          channelId: live
          projectId: todo-list-82592
          publicDir: "./build"
          env: ".env"