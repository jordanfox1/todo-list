name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm i pnpm@latest -g

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm run build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./build

  deploy_to_staging:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Deploy to Firebase Hosting (Staging)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_LIST_STAGING }}"
          channelId: live
          projectId: todo-list-staging
          publicDir: "./build"
          env: ".env.staging"

  run_visual_regression_tests:
    needs: deploy_to_staging
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Run Visual Regression Tests
        run: |
          pnpm add -g @testim/testim-cli --force
          testim --token ${{ secrets.TESTIM_TOKEN }} --project ${{ secrets.TESTIM_PROJECT_ID }} --grid "Testim-Grid"

  deploy_to_production:
    needs: run_visual_regression_tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Deploy to Firebase Hosting (Production)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TODO_LIST_82592 }}"
          channelId: live
          projectId: todo-list-82592
          publicDir: "./build"
          env: ".env.production"